{"version":3,"sources":["components/greeting/Greetings.jsx","components/count/Count.jsx","components/theme/Theme.jsx","App.js","reportWebVitals.js","index.js"],"names":["Greetings","props","Count","number","useState","value","setValue","className","onClick","event","Theme","type","class","styles","id","onclick","backgroundColor","App","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAQeA,MARf,SAAmBC,GACjB,OACE,gCACE,+CACA,sE,aCkCSC,MAnCf,YAA2B,EAAVC,OAAW,IAAD,EACCC,mBAAS,GADV,mBAClBC,EADkB,KACXC,EADW,KAqBzB,OACE,8BACE,sBAAKC,UAAU,YAAf,UACE,wBAAQC,QArBU,SAACC,GACvBH,EAASD,EAAQ,IAoBb,4BACA,wBAAQG,QAnBU,SAACC,GACvBH,EAASD,EAAQ,IAkBb,4BACA,wBAAQG,QAjBY,SAACC,GACzBH,EAASD,EAAQ,MAgBb,8BACA,qBAAKE,UAAU,MAAf,SAAsBF,IACtB,wBAAQG,QAhBW,SAACC,GACxBH,EAASD,EAAQ,IAeb,4BACA,wBAAQG,QAdW,SAACC,GACxBH,EAASD,EAAQ,IAab,4BAA2D,IAC3D,wBAAQG,QAZa,SAACC,GAC1BH,EAASD,EAAQ,MAWb,oC,MCMOK,MApCf,SAAeT,GAKb,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQI,KAAK,SAASC,MAAM,kBAA5B,qBAGA,wBAAQD,KAAK,SAASC,MAAM,oBAA5B,uBAGA,wBAAQD,KAAK,SAASC,MAAM,kBAA5B,qBAGA,wBAAQD,KAAK,SAASC,MAAM,iBAA5B,oBAGA,wBAAQD,KAAK,SAASC,MAAM,kBAA5B,qBAGA,wBAAQD,KAAK,SAASC,MAAM,eAA5B,kBAGA,wBAAQD,KAAK,SAASC,MAAM,gBAA5B,mBAGA,wBAAQD,KAAK,SAASC,MAAM,eAA5B,kBAGA,qBAAKL,UAAWN,EAAMY,OAAQC,GAAG,WAAjC,+BC9BAD,EAAS,GACf,SAASE,EAAQN,GACfI,EAAOG,gBAAkB,MAaZC,MAXf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAON,KAAK,MAAMH,QAASO,EAASG,MAAOL,QCDlCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3610e92d.chunk.js","sourcesContent":["function Greetings(props) {\n  return (\n    <div>\n      <h1>Welcome here!</h1>\n      <h2>Chemi pirveli davaleba reactshi!</h2>\n    </div>\n  );\n}\nexport default Greetings;\n","import { useState } from \"react\";\nimport \"./count.css\";\n\nfunction Count({ number }) {\n  const [value, setValue] = useState(0);\n\n  const clickIcrement_1 = (event) => {\n    setValue(value + 1);\n  };\n  const clickIcrement_5 = (event) => {\n    setValue(value + 5);\n  };\n  const clickIcrement_100 = (event) => {\n    setValue(value + 100);\n  };\n  const clickDecrement_1 = (event) => {\n    setValue(value - 1);\n  };\n  const clickDecrement_5 = (event) => {\n    setValue(value - 5);\n  };\n  const clickDecrement_100 = (event) => {\n    setValue(value - 100);\n  };\n  return (\n    <div>\n      <div className=\"count-div\">\n        <button onClick={clickIcrement_1}>Increment by 1</button>\n        <button onClick={clickIcrement_5}>Increment by 5</button>\n        <button onClick={clickIcrement_100}>Increment by 100</button>\n        <div className=\"div\">{value}</div>\n        <button onClick={clickDecrement_1}>Decrement by 1</button>\n        <button onClick={clickDecrement_5}>Decrement by 5</button>{\" \"}\n        <button onClick={clickDecrement_100}>Decrement by 100</button>\n      </div>\n    </div>\n  );\n}\nexport default Count;\n","import { useState } from \"react\";\nimport \"./divs.css\";\n\nfunction Theme(props) {\n  const styles = {};\n  function onclick(event) {\n    styles.backgroundColor = \"red\";\n  }\n  return (\n    <div className=\"theme\">\n      <button type=\"button\" class=\"btn btn-primary\">\n        Primary\n      </button>\n      <button type=\"button\" class=\"btn btn-secondary\">\n        Secondary\n      </button>\n      <button type=\"button\" class=\"btn btn-success\">\n        Success\n      </button>\n      <button type=\"button\" class=\"btn btn-danger\">\n        Danger\n      </button>\n      <button type=\"button\" class=\"btn btn-warning\">\n        Warning\n      </button>\n      <button type=\"button\" class=\"btn btn-info\">\n        Info\n      </button>\n      <button type=\"button\" class=\"btn btn-light\">\n        Light\n      </button>\n      <button type=\"button\" class=\"btn btn-dark\">\n        Dark\n      </button>\n      <div className={props.styles} id=\"colorDiv\">colorized div</div>\n    </div>\n  );\n}\n\nexport default Theme;\n","import \"./App.css\";\nimport Greetings from \"./components/greeting/Greetings\";\nimport Count from \"./components/count/Count\";\nimport Theme from \"./components/theme/Theme\";\nconst styles = {};\nfunction onclick(event) {\n  styles.backgroundColor = \"red\";\n}\nfunction App() {\n  return (\n    <div>\n      <Greetings />\n      <Count />\n      <Theme type=\"red\" onClick={onclick} style={styles} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}